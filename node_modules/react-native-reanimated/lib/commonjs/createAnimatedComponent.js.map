{"version":3,"names":["dummyListener","maybeBuild","layoutAnimationOrBuilder","isAnimationBuilder","value","build","flattenArray","array","Array","isArray","resultArr","_flattenArray","arr","forEach","item","push","onlyAnimatedStyles","styles","filter","style","viewDescriptors","isSameAnimatedStyle","style1","style2","viewsRef","isSameAnimatedProps","has","key","x","undefined","isInlineStyleTransform","transform","some","t","hasInlineStyles","Object","keys","styleValue","isSharedValue","extractSharedValuesMapFromProps","props","inlineProps","entries","inlinePropsHasChanged","styles1","styles2","length","getInlinePropsUpdate","update","map","createAnimatedComponent","Component","options","invariant","prototype","isReactComponent","AnimatedComponent","React","constructor","setAndForwardRef","getForwardedRef","forwardedRef","setLocalRef","ref","tag","findNodeHandle","layout","entering","exiting","sharedTransitionTag","shouldBeUseWeb","enableLayoutAnimations","configureLayoutAnimations","LayoutAnimationType","LAYOUT","ENTERING","EXITING","sharedElementTransition","sharedTransitionStyle","DefaultSharedTransition","SHARED_ELEMENT_TRANSITION","_component","isJest","animatedStyle","componentWillUnmount","_detachNativeEvents","_detachStyles","_detachInlineProps","componentDidMount","_attachNativeEvents","_attachAnimatedStyles","_attachInlineProps","_getEventViewRef","getScrollableNode","node","viewTag","setNativeProps","prop","current","WorkletEventHandler","registerForEvents","unregisterFromEvents","Platform","OS","_styles","remove","_viewTag","animatedProps","global","_IS_FABRIC","runOnUI","_removeShadowNodeFromRegistry","_reattachNativeEvents","prevProps","reattachNeeded","_updateFromNative","_getViewInfo","viewName","shadowNodeWrapper","viewConfig","hostInstance","RNRenderer","findHostInstance_DEPRECATED","Error","_nativeTag","uiViewClassName","getShadowNodeWrapperFromRef","prevStyles","prevAnimatedProps","_animatedProps","hasReanimated2Props","adaptViewConfig","hasOneSameStyle","prevStyle","isPresent","add","name","initial","newInlineProps","hasChanged","_inlineProps","_inlinePropsViewDescriptors","makeViewDescriptorsSet","sharableViewDescriptors","maybeViewRef","NativeReanimatedModule","native","items","Set","updaterFunction","updateProps","_inlinePropsMapperId","stopMapper","startMapper","values","componentDidUpdate","_filterNonAnimatedProps","inputProps","styleProp","processedStyle","_isFirstRender","initialStyle","initialUpdaterRun","updater","newStyle","StyleSheet","flatten","animatedProp","eventNames","eventName","listeners","isChromeDebugger","render","platformProps","select","web","default","collapsable","_setComponentRef","displayName","forwardRef"],"sources":["createAnimatedComponent.tsx"],"sourcesContent":["import React, { Component, ComponentType, MutableRefObject, Ref } from 'react';\nimport { findNodeHandle, Platform, StyleSheet } from 'react-native';\nimport WorkletEventHandler from './reanimated2/WorkletEventHandler';\nimport setAndForwardRef from './setAndForwardRef';\nimport './reanimated2/layoutReanimation/animationsManager';\nimport invariant from 'invariant';\nimport { adaptViewConfig } from './ConfigHelper';\nimport { RNRenderer } from './reanimated2/platform-specific/RNRenderer';\nimport {\n  configureLayoutAnimations,\n  enableLayoutAnimations,\n  runOnUI,\n  startMapper,\n  stopMapper,\n} from './reanimated2/core';\nimport {\n  isJest,\n  isChromeDebugger,\n  shouldBeUseWeb,\n} from './reanimated2/PlatformChecker';\nimport { initialUpdaterRun } from './reanimated2/animation';\nimport {\n  BaseAnimationBuilder,\n  DefaultSharedTransition,\n  EntryExitAnimationFunction,\n  ILayoutAnimationBuilder,\n  LayoutAnimationFunction,\n  LayoutAnimationType,\n} from './reanimated2/layoutReanimation';\nimport {\n  SharedValue,\n  StyleProps,\n  ShadowNodeWrapper,\n} from './reanimated2/commonTypes';\nimport {\n  makeViewDescriptorsSet,\n  ViewDescriptorsSet,\n  ViewRefSet,\n} from './reanimated2/ViewDescriptorsSet';\nimport { getShadowNodeWrapperFromRef } from './reanimated2/fabricUtils';\nimport updateProps from './reanimated2/UpdateProps';\nimport NativeReanimatedModule from './reanimated2/NativeReanimated';\nimport { isSharedValue } from './reanimated2';\n\nfunction dummyListener() {\n  // empty listener we use to assign to listener properties for which animated\n  // event is used.\n}\n\nfunction maybeBuild(\n  layoutAnimationOrBuilder:\n    | ILayoutAnimationBuilder\n    | LayoutAnimationFunction\n    | Keyframe\n): LayoutAnimationFunction | Keyframe {\n  const isAnimationBuilder = (\n    value: ILayoutAnimationBuilder | LayoutAnimationFunction | Keyframe\n  ): value is ILayoutAnimationBuilder =>\n    'build' in layoutAnimationOrBuilder &&\n    typeof layoutAnimationOrBuilder.build === 'function';\n\n  if (isAnimationBuilder(layoutAnimationOrBuilder)) {\n    return layoutAnimationOrBuilder.build();\n  } else {\n    return layoutAnimationOrBuilder;\n  }\n}\n\ntype NestedArray<T> = T | NestedArray<T>[];\nfunction flattenArray<T>(array: NestedArray<T>): T[] {\n  if (!Array.isArray(array)) {\n    return [array];\n  }\n  const resultArr: T[] = [];\n\n  const _flattenArray = (arr: NestedArray<T>[]): void => {\n    arr.forEach((item) => {\n      if (Array.isArray(item)) {\n        _flattenArray(item);\n      } else {\n        resultArr.push(item);\n      }\n    });\n  };\n  _flattenArray(array);\n  return resultArr;\n}\n\nfunction onlyAnimatedStyles(styles: StyleProps[]) {\n  return styles.filter((style) => style?.viewDescriptors);\n}\n\nfunction isSameAnimatedStyle(\n  style1?: StyleProps,\n  style2?: StyleProps\n): boolean {\n  // We cannot use equality check to compare useAnimatedStyle outputs directly.\n  // Instead, we can compare its viewsRefs.\n  return style1?.viewsRef === style2?.viewsRef;\n}\n\nconst isSameAnimatedProps = isSameAnimatedStyle;\n\nconst has = <K extends string>(\n  key: K,\n  x: unknown\n): x is { [key in K]: unknown } => {\n  if (typeof x === 'function' || typeof x === 'object') {\n    if (x === null || x === undefined) {\n      return false;\n    } else {\n      return key in x;\n    }\n  }\n  return false;\n};\n\nfunction isInlineStyleTransform(transform: any): boolean {\n  if (!transform) {\n    return false;\n  }\n  return transform.some((t: Record<string, any>) => hasInlineStyles(t));\n}\n\nfunction hasInlineStyles(style: StyleProps): boolean {\n  if (!style) {\n    return false;\n  }\n  return Object.keys(style).some((key) => {\n    const styleValue = style[key];\n    return (\n      isSharedValue(styleValue) ||\n      (key === 'transform' && isInlineStyleTransform(styleValue))\n    );\n  });\n}\n\nfunction extractSharedValuesMapFromProps(\n  props: AnimatedComponentProps<InitialComponentProps>\n): Record<string, any> {\n  const inlineProps: Record<string, any> = {};\n\n  for (const key in props) {\n    const value = props[key];\n    if (key === 'style') {\n      const styles = flattenArray<StyleProps>(props.style ?? []);\n      styles.forEach((style) => {\n        if (!style) {\n          return;\n        }\n        for (const [key, styleValue] of Object.entries(style)) {\n          if (isSharedValue(styleValue)) {\n            inlineProps[key] = styleValue;\n          } else if (\n            key === 'transform' &&\n            isInlineStyleTransform(styleValue)\n          ) {\n            inlineProps[key] = styleValue;\n          }\n        }\n      });\n    } else if (isSharedValue(value)) {\n      inlineProps[key] = value;\n    }\n  }\n\n  return inlineProps;\n}\n\nfunction inlinePropsHasChanged(styles1: StyleProps, styles2: StyleProps) {\n  if (Object.keys(styles1).length !== Object.keys(styles2).length) {\n    return true;\n  }\n\n  for (const key of Object.keys(styles1)) {\n    if (styles1[key] !== styles2[key]) return true;\n  }\n\n  return false;\n}\n\nfunction getInlinePropsUpdate(inlineProps: Record<string, any>) {\n  'worklet';\n  const update: Record<string, any> = {};\n  for (const [key, styleValue] of Object.entries(inlineProps)) {\n    if (key === 'transform') {\n      update[key] = styleValue.map((transform: Record<string, any>) => {\n        return getInlinePropsUpdate(transform);\n      });\n    } else if (isSharedValue(styleValue)) {\n      update[key] = styleValue.value;\n    } else {\n      update[key] = styleValue;\n    }\n  }\n  return update;\n}\n\ninterface AnimatedProps extends Record<string, unknown> {\n  viewDescriptors?: ViewDescriptorsSet;\n  viewsRef?: ViewRefSet<unknown>;\n  initial?: SharedValue<StyleProps>;\n}\n\nexport type AnimatedComponentProps<P extends Record<string, unknown>> = P & {\n  forwardedRef?: Ref<Component>;\n  style?: NestedArray<StyleProps>;\n  animatedProps?: Partial<AnimatedComponentProps<AnimatedProps>>;\n  animatedStyle?: StyleProps;\n  layout?:\n    | BaseAnimationBuilder\n    | ILayoutAnimationBuilder\n    | typeof BaseAnimationBuilder;\n  entering?:\n    | BaseAnimationBuilder\n    | typeof BaseAnimationBuilder\n    | EntryExitAnimationFunction\n    | Keyframe;\n  exiting?:\n    | BaseAnimationBuilder\n    | typeof BaseAnimationBuilder\n    | EntryExitAnimationFunction\n    | Keyframe;\n  sharedTransitionTag?: string;\n  sharedTransitionStyle?: ILayoutAnimationBuilder;\n};\n\ntype Options<P> = {\n  setNativeProps: (ref: ComponentRef, props: P) => void;\n};\n\ninterface ComponentRef extends Component {\n  setNativeProps?: (props: Record<string, unknown>) => void;\n  getScrollableNode?: () => ComponentRef;\n}\n\nexport interface InitialComponentProps extends Record<string, unknown> {\n  ref?: Ref<Component>;\n  collapsable?: boolean;\n}\n\nexport default function createAnimatedComponent(\n  Component: ComponentType<InitialComponentProps>,\n  options?: Options<InitialComponentProps>\n): ComponentType<AnimatedComponentProps<InitialComponentProps>> {\n  invariant(\n    typeof Component !== 'function' ||\n      (Component.prototype && Component.prototype.isReactComponent),\n    '`createAnimatedComponent` does not support stateless functional components; ' +\n      'use a class component instead.'\n  );\n\n  class AnimatedComponent extends React.Component<\n    AnimatedComponentProps<InitialComponentProps>\n  > {\n    _styles: StyleProps[] | null = null;\n    _animatedProps?: Partial<AnimatedComponentProps<AnimatedProps>>;\n    _viewTag = -1;\n    _isFirstRender = true;\n    animatedStyle: { value: StyleProps } = { value: {} };\n    initialStyle = {};\n    _component: ComponentRef | null = null;\n    _inlinePropsViewDescriptors: ViewDescriptorsSet | null = null;\n    _inlinePropsMapperId: number | null = null;\n    _inlineProps: StyleProps = {};\n    static displayName: string;\n\n    constructor(props: AnimatedComponentProps<InitialComponentProps>) {\n      super(props);\n      if (isJest()) {\n        this.animatedStyle = { value: {} };\n      }\n    }\n\n    componentWillUnmount() {\n      this._detachNativeEvents();\n      this._detachStyles();\n      this._detachInlineProps();\n    }\n\n    componentDidMount() {\n      this._attachNativeEvents();\n      this._attachAnimatedStyles();\n      this._attachInlineProps();\n    }\n\n    _getEventViewRef() {\n      // Make sure to get the scrollable node for components that implement\n      // `ScrollResponder.Mixin`.\n      return this._component?.getScrollableNode\n        ? this._component.getScrollableNode()\n        : this._component;\n    }\n\n    _attachNativeEvents() {\n      const node = this._getEventViewRef();\n      const viewTag = findNodeHandle(options?.setNativeProps ? this : node);\n\n      for (const key in this.props) {\n        const prop = this.props[key];\n        if (\n          has('current', prop) &&\n          prop.current instanceof WorkletEventHandler\n        ) {\n          prop.current.registerForEvents(viewTag as number, key);\n        }\n      }\n    }\n\n    _detachNativeEvents() {\n      for (const key in this.props) {\n        const prop = this.props[key];\n        if (\n          has('current', prop) &&\n          prop.current instanceof WorkletEventHandler\n        ) {\n          prop.current.unregisterFromEvents();\n        }\n      }\n    }\n\n    _detachStyles() {\n      if (Platform.OS === 'web' && this._styles !== null) {\n        for (const style of this._styles) {\n          if (style?.viewsRef) {\n            style.viewsRef.remove(this);\n          }\n        }\n      } else if (this._viewTag !== -1 && this._styles !== null) {\n        for (const style of this._styles) {\n          style.viewDescriptors.remove(this._viewTag);\n        }\n        if (this.props.animatedProps?.viewDescriptors) {\n          this.props.animatedProps.viewDescriptors.remove(this._viewTag);\n        }\n        if (global._IS_FABRIC) {\n          const viewTag = this._viewTag;\n          runOnUI(() => {\n            'worklet';\n            _removeShadowNodeFromRegistry(viewTag);\n          })();\n        }\n      }\n    }\n\n    _reattachNativeEvents(\n      prevProps: AnimatedComponentProps<InitialComponentProps>\n    ) {\n      let viewTag: number | undefined;\n\n      for (const key in this.props) {\n        const prop = this.props[key];\n        if (\n          has('current', prop) &&\n          prop.current instanceof WorkletEventHandler\n        ) {\n          if (viewTag === undefined) {\n            viewTag = prop.current.viewTag;\n          }\n        }\n      }\n      for (const key in prevProps) {\n        const prop = this.props[key];\n        if (\n          has('current', prop) &&\n          prop.current instanceof WorkletEventHandler &&\n          prop.current.reattachNeeded\n        ) {\n          prop.current.unregisterFromEvents();\n        }\n      }\n\n      for (const key in this.props) {\n        const prop = this.props[key];\n        if (\n          has('current', prop) &&\n          prop.current instanceof WorkletEventHandler &&\n          prop.current.reattachNeeded\n        ) {\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n          prop.current.registerForEvents(viewTag!, key);\n          prop.current.reattachNeeded = false;\n        }\n      }\n    }\n\n    _updateFromNative(props: StyleProps) {\n      if (options?.setNativeProps) {\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        options.setNativeProps(this._component!, props);\n      } else {\n        // eslint-disable-next-line no-unused-expressions\n        this._component?.setNativeProps?.(props);\n      }\n    }\n\n    _getViewInfo() {\n      let viewTag: number | null;\n      let viewName: string | null;\n      let shadowNodeWrapper: ShadowNodeWrapper | null = null;\n      let viewConfig;\n      if (Platform.OS === 'web') {\n        viewTag = findNodeHandle(this);\n        viewName = null;\n        shadowNodeWrapper = null;\n        viewConfig = null;\n      } else {\n        // hostInstance can be null for a component that doesn't render anything (render function returns null). Example: svg Stop: https://github.com/react-native-svg/react-native-svg/blob/develop/src/elements/Stop.tsx\n        const hostInstance = RNRenderer.findHostInstance_DEPRECATED(this);\n        if (!hostInstance) {\n          throw new Error(\n            'Cannot find host instance for this component. Maybe it renders nothing?'\n          );\n        }\n        // we can access view tag in the same way it's accessed here https://github.com/facebook/react/blob/e3f4eb7272d4ca0ee49f27577156b57eeb07cf73/packages/react-native-renderer/src/ReactFabric.js#L146\n        viewTag = hostInstance?._nativeTag;\n        /**\n         * RN uses viewConfig for components for storing different properties of the component(example: https://github.com/facebook/react-native/blob/master/Libraries/Components/ScrollView/ScrollViewViewConfig.js#L16).\n         * The name we're looking for is in the field named uiViewClassName.\n         */\n        viewName = hostInstance?.viewConfig?.uiViewClassName;\n\n        viewConfig = hostInstance?.viewConfig;\n\n        if (global._IS_FABRIC) {\n          shadowNodeWrapper = getShadowNodeWrapperFromRef(this);\n        }\n      }\n      return { viewTag, viewName, shadowNodeWrapper, viewConfig };\n    }\n\n    _attachAnimatedStyles() {\n      const styles = this.props.style\n        ? onlyAnimatedStyles(flattenArray<StyleProps>(this.props.style))\n        : [];\n      const prevStyles = this._styles;\n      this._styles = styles;\n\n      const prevAnimatedProps = this._animatedProps;\n      this._animatedProps = this.props.animatedProps;\n\n      const { viewTag, viewName, shadowNodeWrapper, viewConfig } =\n        this._getViewInfo();\n\n      // update UI props whitelist for this view\n      const hasReanimated2Props =\n        this.props.animatedProps?.viewDescriptors || styles.length;\n      if (hasReanimated2Props && viewConfig) {\n        adaptViewConfig(viewConfig);\n      }\n\n      this._viewTag = viewTag as number;\n\n      // remove old styles\n      if (prevStyles) {\n        // in most of the cases, views have only a single animated style and it remains unchanged\n        const hasOneSameStyle =\n          styles.length === 1 &&\n          prevStyles.length === 1 &&\n          isSameAnimatedStyle(styles[0], prevStyles[0]);\n\n        if (!hasOneSameStyle) {\n          // otherwise, remove each style that is not present in new styles\n          for (const prevStyle of prevStyles) {\n            const isPresent = styles.some((style) =>\n              isSameAnimatedStyle(style, prevStyle)\n            );\n            if (!isPresent) {\n              prevStyle.viewDescriptors.remove(viewTag);\n            }\n          }\n        }\n      }\n\n      styles.forEach((style) => {\n        style.viewDescriptors.add({\n          tag: viewTag,\n          name: viewName,\n          shadowNodeWrapper,\n        });\n        if (isJest()) {\n          /**\n           * We need to connect Jest's TestObject instance whose contains just props object\n           * with the updateProps() function where we update the properties of the component.\n           * We can't update props object directly because TestObject contains a copy of props - look at render function:\n           * const props = this._filterNonAnimatedProps(this.props);\n           */\n          this.animatedStyle.value = {\n            ...this.animatedStyle.value,\n            ...style.initial.value,\n          };\n          style.animatedStyle.current = this.animatedStyle;\n        }\n      });\n\n      // detach old animatedProps\n      if (\n        prevAnimatedProps &&\n        !isSameAnimatedProps(prevAnimatedProps, this.props.animatedProps)\n      ) {\n        prevAnimatedProps.viewDescriptors!.remove(viewTag as number);\n      }\n\n      // attach animatedProps property\n      if (this.props.animatedProps?.viewDescriptors) {\n        this.props.animatedProps.viewDescriptors.add({\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n          tag: viewTag!,\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n          name: viewName!,\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n          shadowNodeWrapper: shadowNodeWrapper!,\n        });\n      }\n    }\n\n    _attachInlineProps() {\n      const newInlineProps: Record<string, any> =\n        extractSharedValuesMapFromProps(this.props);\n      const hasChanged = inlinePropsHasChanged(\n        newInlineProps,\n        this._inlineProps\n      );\n\n      if (hasChanged) {\n        if (!this._inlinePropsViewDescriptors) {\n          this._inlinePropsViewDescriptors = makeViewDescriptorsSet();\n\n          const { viewTag, viewName, shadowNodeWrapper, viewConfig } =\n            this._getViewInfo();\n\n          if (Object.keys(newInlineProps).length && viewConfig) {\n            adaptViewConfig(viewConfig);\n          }\n\n          this._inlinePropsViewDescriptors.add({\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            tag: viewTag!,\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            name: viewName!,\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            shadowNodeWrapper: shadowNodeWrapper!,\n          });\n        }\n        const sharableViewDescriptors =\n          this._inlinePropsViewDescriptors.sharableViewDescriptors;\n\n        const maybeViewRef = NativeReanimatedModule.native\n          ? undefined\n          : ({ items: new Set([this]) } as ViewRefSet<any>); // see makeViewsRefSet\n\n        const updaterFunction = () => {\n          'worklet';\n          const update = getInlinePropsUpdate(newInlineProps);\n          updateProps(sharableViewDescriptors, update, maybeViewRef);\n        };\n        this._inlineProps = newInlineProps;\n        if (this._inlinePropsMapperId) {\n          stopMapper(this._inlinePropsMapperId);\n        }\n        this._inlinePropsMapperId = null;\n        if (Object.keys(newInlineProps).length) {\n          this._inlinePropsMapperId = startMapper(\n            updaterFunction,\n            Object.values(newInlineProps)\n          );\n        }\n      }\n    }\n\n    _detachInlineProps() {\n      if (this._inlinePropsMapperId) {\n        stopMapper(this._inlinePropsMapperId);\n      }\n    }\n\n    componentDidUpdate(\n      prevProps: AnimatedComponentProps<InitialComponentProps>\n    ) {\n      this._reattachNativeEvents(prevProps);\n      this._attachAnimatedStyles();\n      this._attachInlineProps();\n    }\n\n    _setComponentRef = setAndForwardRef<Component>({\n      getForwardedRef: () =>\n        this.props.forwardedRef as MutableRefObject<\n          Component<Record<string, unknown>, Record<string, unknown>, unknown>\n        >,\n      setLocalRef: (ref) => {\n        // TODO update config\n        const tag = findNodeHandle(ref);\n        const { layout, entering, exiting, sharedTransitionTag } = this.props;\n        if (\n          (layout || entering || exiting || sharedTransitionTag) &&\n          tag != null\n        ) {\n          if (!shouldBeUseWeb()) {\n            enableLayoutAnimations(true, false);\n          }\n          if (layout) {\n            configureLayoutAnimations(\n              tag,\n              LayoutAnimationType.LAYOUT,\n              maybeBuild(layout)\n            );\n          }\n          if (entering) {\n            configureLayoutAnimations(\n              tag,\n              LayoutAnimationType.ENTERING,\n              maybeBuild(entering)\n            );\n          }\n          if (exiting) {\n            configureLayoutAnimations(\n              tag,\n              LayoutAnimationType.EXITING,\n              maybeBuild(exiting)\n            );\n          }\n          if (sharedTransitionTag) {\n            const sharedElementTransition =\n              this.props.sharedTransitionStyle ?? DefaultSharedTransition;\n            configureLayoutAnimations(\n              tag,\n              LayoutAnimationType.SHARED_ELEMENT_TRANSITION,\n              maybeBuild(sharedElementTransition),\n              sharedTransitionTag\n            );\n          }\n        }\n\n        if (ref !== this._component) {\n          this._component = ref;\n        }\n      },\n    });\n\n    _filterNonAnimatedProps(\n      inputProps: AnimatedComponentProps<InitialComponentProps>\n    ): Record<string, unknown> {\n      const props: Record<string, unknown> = {};\n      for (const key in inputProps) {\n        const value = inputProps[key];\n        if (key === 'style') {\n          const styleProp = inputProps.style;\n          const styles = flattenArray<StyleProps>(styleProp ?? []);\n          const processedStyle: StyleProps = styles.map((style) => {\n            if (style && style.viewDescriptors) {\n              // this is how we recognize styles returned by useAnimatedStyle\n              style.viewsRef.add(this);\n              if (this._isFirstRender) {\n                this.initialStyle = {\n                  ...style.initial.value,\n                  ...initialUpdaterRun<StyleProps>(style.initial.updater),\n                };\n              }\n              return this.initialStyle;\n            } else if (hasInlineStyles(style)) {\n              if (this._isFirstRender) {\n                return getInlinePropsUpdate(style);\n              }\n              const newStyle: StyleProps = {};\n              for (const [key, styleValue] of Object.entries(style)) {\n                if (\n                  !isSharedValue(styleValue) &&\n                  !(key === 'transform' && isInlineStyleTransform(styleValue))\n                ) {\n                  newStyle[key] = styleValue;\n                }\n              }\n              return newStyle;\n            } else {\n              return style;\n            }\n          });\n          props[key] = StyleSheet.flatten(processedStyle);\n        } else if (key === 'animatedProps') {\n          const animatedProp = inputProps.animatedProps as Partial<\n            AnimatedComponentProps<AnimatedProps>\n          >;\n          if (animatedProp.initial !== undefined) {\n            Object.keys(animatedProp.initial.value).forEach((key) => {\n              props[key] = animatedProp.initial?.value[key];\n              animatedProp.viewsRef?.add(this);\n            });\n          }\n        } else if (\n          has('current', value) &&\n          value.current instanceof WorkletEventHandler\n        ) {\n          if (value.current.eventNames.length > 0) {\n            value.current.eventNames.forEach((eventName) => {\n              props[eventName] = has('listeners', value.current)\n                ? (value.current.listeners as Record<string, unknown>)[\n                    eventName\n                  ]\n                : dummyListener;\n            });\n          } else {\n            props[key] = dummyListener;\n          }\n        } else if (isSharedValue(value)) {\n          if (this._isFirstRender) {\n            props[key] = (value as SharedValue<any>).value;\n          }\n        } else if (\n          key !== 'onGestureHandlerStateChange' ||\n          !isChromeDebugger()\n        ) {\n          props[key] = value;\n        }\n      }\n      return props;\n    }\n\n    render() {\n      const props = this._filterNonAnimatedProps(this.props);\n      if (isJest()) {\n        props.animatedStyle = this.animatedStyle;\n      }\n\n      if (this._isFirstRender) {\n        this._isFirstRender = false;\n      }\n\n      const platformProps = Platform.select({\n        web: {},\n        default: { collapsable: false },\n      });\n      return (\n        <Component {...props} ref={this._setComponentRef} {...platformProps} />\n      );\n    }\n  }\n\n  AnimatedComponent.displayName = `AnimatedComponent(${\n    Component.displayName || Component.name || 'Component'\n  })`;\n\n  return React.forwardRef<Component>((props, ref) => {\n    return (\n      <AnimatedComponent\n        {...props}\n        {...(ref === null ? null : { forwardedRef: ref })}\n      />\n    );\n  });\n}\n"],"mappings":"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"}