{"version":3,"names":["makeViewDescriptorsSet","sharableViewDescriptors","makeMutable","data","add","item","modify","descriptors","index","findIndex","descriptor","tag","push","remove","viewTag","splice","makeViewsRefSet","ref","useRef","current","items","Set","has","delete"],"sources":["ViewDescriptorsSet.ts"],"sourcesContent":["import { useRef } from 'react';\nimport { makeMutable } from './core';\nimport { SharedValue } from './commonTypes';\nimport { Descriptor } from './hook/commonTypes';\n\nexport interface ViewRefSet<T> {\n  items: Set<T>;\n  add: (item: T) => void;\n  remove: (item: T) => void;\n}\n\nexport interface ViewDescriptorsSet {\n  sharableViewDescriptors: SharedValue<Descriptor[]>;\n  add: (item: Descriptor) => void;\n  remove: (viewTag: number) => void;\n}\n\nexport function makeViewDescriptorsSet(): ViewDescriptorsSet {\n  const sharableViewDescriptors = makeMutable<Descriptor[]>([]);\n  const data: ViewDescriptorsSet = {\n    sharableViewDescriptors,\n    add: (item: Descriptor) => {\n      sharableViewDescriptors.modify((descriptors: Descriptor[]) => {\n        'worklet';\n        const index = descriptors.findIndex(\n          (descriptor) => descriptor.tag === item.tag\n        );\n        if (index !== -1) {\n          descriptors[index] = item;\n        } else {\n          descriptors.push(item);\n        }\n        return descriptors;\n      });\n    },\n\n    remove: (viewTag: number) => {\n      sharableViewDescriptors.modify((descriptors: Descriptor[]) => {\n        'worklet';\n        const index = descriptors.findIndex(\n          (descriptor) => descriptor.tag === viewTag\n        );\n        if (index !== -1) {\n          descriptors.splice(index, 1);\n        }\n        return descriptors;\n      });\n    },\n  };\n  return data;\n}\n\nexport function makeViewsRefSet<T>(): ViewRefSet<T> {\n  const ref = useRef<ViewRefSet<T> | null>(null);\n  if (ref.current === null) {\n    const data: ViewRefSet<T> = {\n      items: new Set(),\n\n      add: (item: T) => {\n        if (data.items.has(item)) return;\n        data.items.add(item);\n      },\n\n      remove: (item: T) => {\n        data.items.delete(item);\n      },\n    };\n    ref.current = data;\n  }\n\n  return ref.current;\n}\n"],"mappings":";;;;;;;;AAAA;;AACA;;AAgBO,SAASA,sBAAT,GAAsD;EAC3D,MAAMC,uBAAuB,GAAG,IAAAC,iBAAA,EAA0B,EAA1B,CAAhC;EACA,MAAMC,IAAwB,GAAG;IAC/BF,uBAD+B;IAE/BG,GAAG,EAAGC,IAAD,IAAsB;MACzBJ,uBAAuB,CAACK,MAAxB,CAAgCC,WAAD,IAA+B;QAC5D;;QACA,MAAMC,KAAK,GAAGD,WAAW,CAACE,SAAZ,CACXC,UAAD,IAAgBA,UAAU,CAACC,GAAX,KAAmBN,IAAI,CAACM,GAD5B,CAAd;;QAGA,IAAIH,KAAK,KAAK,CAAC,CAAf,EAAkB;UAChBD,WAAW,CAACC,KAAD,CAAX,GAAqBH,IAArB;QACD,CAFD,MAEO;UACLE,WAAW,CAACK,IAAZ,CAAiBP,IAAjB;QACD;;QACD,OAAOE,WAAP;MACD,CAXD;IAYD,CAf8B;IAiB/BM,MAAM,EAAGC,OAAD,IAAqB;MAC3Bb,uBAAuB,CAACK,MAAxB,CAAgCC,WAAD,IAA+B;QAC5D;;QACA,MAAMC,KAAK,GAAGD,WAAW,CAACE,SAAZ,CACXC,UAAD,IAAgBA,UAAU,CAACC,GAAX,KAAmBG,OADvB,CAAd;;QAGA,IAAIN,KAAK,KAAK,CAAC,CAAf,EAAkB;UAChBD,WAAW,CAACQ,MAAZ,CAAmBP,KAAnB,EAA0B,CAA1B;QACD;;QACD,OAAOD,WAAP;MACD,CATD;IAUD;EA5B8B,CAAjC;EA8BA,OAAOJ,IAAP;AACD;;AAEM,SAASa,eAAT,GAA6C;EAClD,MAAMC,GAAG,GAAG,IAAAC,aAAA,EAA6B,IAA7B,CAAZ;;EACA,IAAID,GAAG,CAACE,OAAJ,KAAgB,IAApB,EAA0B;IACxB,MAAMhB,IAAmB,GAAG;MAC1BiB,KAAK,EAAE,IAAIC,GAAJ,EADmB;MAG1BjB,GAAG,EAAGC,IAAD,IAAa;QAChB,IAAIF,IAAI,CAACiB,KAAL,CAAWE,GAAX,CAAejB,IAAf,CAAJ,EAA0B;QAC1BF,IAAI,CAACiB,KAAL,CAAWhB,GAAX,CAAeC,IAAf;MACD,CANyB;MAQ1BQ,MAAM,EAAGR,IAAD,IAAa;QACnBF,IAAI,CAACiB,KAAL,CAAWG,MAAX,CAAkBlB,IAAlB;MACD;IAVyB,CAA5B;IAYAY,GAAG,CAACE,OAAJ,GAAchB,IAAd;EACD;;EAED,OAAOc,GAAG,CAACE,OAAX;AACD"}