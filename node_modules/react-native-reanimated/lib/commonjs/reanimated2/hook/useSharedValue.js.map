{"version":3,"names":["useSharedValue","init","oneWayReadsOnly","ref","useRef","makeMutable","current","useEffect","cancelAnimation"],"sources":["useSharedValue.ts"],"sourcesContent":["import { useEffect, useRef } from 'react';\nimport { cancelAnimation } from '../animation';\nimport { SharedValue } from '../commonTypes';\nimport { makeMutable } from '../core';\n\nexport function useSharedValue<T>(\n  init: T,\n  oneWayReadsOnly = false\n): SharedValue<T> {\n  const ref = useRef<SharedValue<T>>(makeMutable(init, oneWayReadsOnly));\n\n  if (ref.current === null) {\n    ref.current = makeMutable(init, oneWayReadsOnly);\n  }\n\n  useEffect(() => {\n    return () => {\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      cancelAnimation(ref.current!);\n    };\n  }, []);\n\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  return ref.current!;\n}\n"],"mappings":";;;;;;;AAAA;;AACA;;AAEA;;AAEO,SAASA,cAAT,CACLC,IADK,EAGW;EAAA,IADhBC,eACgB,uEADE,KACF;EAChB,MAAMC,GAAG,GAAG,IAAAC,aAAA,EAAuB,IAAAC,iBAAA,EAAYJ,IAAZ,EAAkBC,eAAlB,CAAvB,CAAZ;;EAEA,IAAIC,GAAG,CAACG,OAAJ,KAAgB,IAApB,EAA0B;IACxBH,GAAG,CAACG,OAAJ,GAAc,IAAAD,iBAAA,EAAYJ,IAAZ,EAAkBC,eAAlB,CAAd;EACD;;EAED,IAAAK,gBAAA,EAAU,MAAM;IACd,OAAO,MAAM;MACX;MACA,IAAAC,0BAAA,EAAgBL,GAAG,CAACG,OAApB;IACD,CAHD;EAID,CALD,EAKG,EALH,EAPgB,CAchB;;EACA,OAAOH,GAAG,CAACG,OAAX;AACD"}