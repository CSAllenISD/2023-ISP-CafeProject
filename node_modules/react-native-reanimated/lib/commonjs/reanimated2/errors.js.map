{"version":3,"names":["_workletStackDetails","Map","registerWorkletStackDetails","hash","stackDetails","set","getBundleOffset","error","frame","stack","split","parsedFrame","exec","file","line","col","Number","processStack","workletStackEntries","match","result","forEach","origLine","origCol","map","errorDetails","get","lineOffset","colOffset","bundleFile","bundleLine","bundleCol","replace","reportFatalErrorOnJS","message","Error","undefined","name","jsEngine","global","ErrorUtils","reportFatalError"],"sources":["errors.ts"],"sourcesContent":["type StackDetails = [Error, number, number];\n\nconst _workletStackDetails = new Map<number, StackDetails>();\n\nexport function registerWorkletStackDetails(\n  hash: number,\n  stackDetails: StackDetails\n) {\n  _workletStackDetails.set(hash, stackDetails);\n}\n\nfunction getBundleOffset(error: Error): [string, number, number] {\n  const frame = error.stack?.split('\\n')?.[0];\n  if (frame) {\n    const parsedFrame = /@([^@]+):(\\d+):(\\d+)/.exec(frame);\n    if (parsedFrame) {\n      const [, file, line, col] = parsedFrame;\n      return [file, Number(line), Number(col)];\n    }\n  }\n  return ['unknown', 0, 0];\n}\n\nfunction processStack(stack: string): string {\n  const workletStackEntries = stack.match(/worklet_(\\d+):(\\d+):(\\d+)/g);\n  let result = stack;\n  workletStackEntries?.forEach((match) => {\n    const [, hash, origLine, origCol] = match.split(/:|_/).map(Number);\n    const errorDetails = _workletStackDetails.get(hash);\n    if (!errorDetails) {\n      return;\n    }\n    const [error, lineOffset, colOffset] = errorDetails;\n    const [bundleFile, bundleLine, bundleCol] = getBundleOffset(error);\n    const line = origLine + bundleLine + lineOffset;\n    const col = origCol + bundleCol + colOffset;\n\n    result = result.replace(match, `${bundleFile}:${line}:${col}`);\n  });\n  return result;\n}\n\nexport function reportFatalErrorOnJS({\n  message,\n  stack,\n}: {\n  message: string;\n  stack?: string;\n}) {\n  const error = new Error();\n  error.message = message;\n  error.stack = stack ? processStack(stack) : undefined;\n  error.name = 'ReanimatedError';\n  // @ts-ignore React Native's ErrorUtils implementation extends the Error type with jsEngine field\n  error.jsEngine = 'reanimated';\n  global.ErrorUtils.reportFatalError(error);\n}\n"],"mappings":";;;;;;;;AAEA,MAAMA,oBAAoB,GAAG,IAAIC,GAAJ,EAA7B;;AAEO,SAASC,2BAAT,CACLC,IADK,EAELC,YAFK,EAGL;EACAJ,oBAAoB,CAACK,GAArB,CAAyBF,IAAzB,EAA+BC,YAA/B;AACD;;AAED,SAASE,eAAT,CAAyBC,KAAzB,EAAiE;EAAA;;EAC/D,MAAMC,KAAK,mBAAGD,KAAK,CAACE,KAAT,uEAAG,aAAaC,KAAb,CAAmB,IAAnB,CAAH,uDAAG,mBAA2B,CAA3B,CAAd;;EACA,IAAIF,KAAJ,EAAW;IACT,MAAMG,WAAW,GAAG,uBAAuBC,IAAvB,CAA4BJ,KAA5B,CAApB;;IACA,IAAIG,WAAJ,EAAiB;MACf,MAAM,GAAGE,IAAH,EAASC,IAAT,EAAeC,GAAf,IAAsBJ,WAA5B;MACA,OAAO,CAACE,IAAD,EAAOG,MAAM,CAACF,IAAD,CAAb,EAAqBE,MAAM,CAACD,GAAD,CAA3B,CAAP;IACD;EACF;;EACD,OAAO,CAAC,SAAD,EAAY,CAAZ,EAAe,CAAf,CAAP;AACD;;AAED,SAASE,YAAT,CAAsBR,KAAtB,EAA6C;EAC3C,MAAMS,mBAAmB,GAAGT,KAAK,CAACU,KAAN,CAAY,4BAAZ,CAA5B;EACA,IAAIC,MAAM,GAAGX,KAAb;EACAS,mBAAmB,SAAnB,IAAAA,mBAAmB,WAAnB,YAAAA,mBAAmB,CAAEG,OAArB,CAA8BF,KAAD,IAAW;IACtC,MAAM,GAAGhB,IAAH,EAASmB,QAAT,EAAmBC,OAAnB,IAA8BJ,KAAK,CAACT,KAAN,CAAY,KAAZ,EAAmBc,GAAnB,CAAuBR,MAAvB,CAApC;;IACA,MAAMS,YAAY,GAAGzB,oBAAoB,CAAC0B,GAArB,CAAyBvB,IAAzB,CAArB;;IACA,IAAI,CAACsB,YAAL,EAAmB;MACjB;IACD;;IACD,MAAM,CAAClB,KAAD,EAAQoB,UAAR,EAAoBC,SAApB,IAAiCH,YAAvC;IACA,MAAM,CAACI,UAAD,EAAaC,UAAb,EAAyBC,SAAzB,IAAsCzB,eAAe,CAACC,KAAD,CAA3D;IACA,MAAMO,IAAI,GAAGQ,QAAQ,GAAGQ,UAAX,GAAwBH,UAArC;IACA,MAAMZ,GAAG,GAAGQ,OAAO,GAAGQ,SAAV,GAAsBH,SAAlC;IAEAR,MAAM,GAAGA,MAAM,CAACY,OAAP,CAAeb,KAAf,EAAuB,GAAEU,UAAW,IAAGf,IAAK,IAAGC,GAAI,EAAnD,CAAT;EACD,CAZD;EAaA,OAAOK,MAAP;AACD;;AAEM,SAASa,oBAAT,OAMJ;EAAA,IANkC;IACnCC,OADmC;IAEnCzB;EAFmC,CAMlC;EACD,MAAMF,KAAK,GAAG,IAAI4B,KAAJ,EAAd;EACA5B,KAAK,CAAC2B,OAAN,GAAgBA,OAAhB;EACA3B,KAAK,CAACE,KAAN,GAAcA,KAAK,GAAGQ,YAAY,CAACR,KAAD,CAAf,GAAyB2B,SAA5C;EACA7B,KAAK,CAAC8B,IAAN,GAAa,iBAAb,CAJC,CAKD;;EACA9B,KAAK,CAAC+B,QAAN,GAAiB,YAAjB;EACAC,MAAM,CAACC,UAAP,CAAkBC,gBAAlB,CAAmClC,KAAnC;AACD"}