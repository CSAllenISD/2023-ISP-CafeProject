{"version":3,"names":["linear","t","ease","Bezier","quad","cubic","poly","n","Math","pow","sin","cos","PI","circle","sqrt","exp","elastic","bounciness","p","back","s","bounce","t2","bezier","x1","y1","x2","y2","factory","bezierFn","in_","easing","out","inOut","EasingObject","in","Easing"],"sources":["Easing.ts"],"sourcesContent":["import { Bezier } from './Bezier';\n\n/**\n * The `Easing` module implements common easing functions. This module is used\n * by [Animate.timing()](docs/animate.html#timing) to convey physically\n * believable motion in animations.\n *\n * You can find a visualization of some common easing functions at\n * http://easings.net/\n *\n * ### Predefined animations\n *\n * The `Easing` module provides several predefined animations through the\n * following methods:\n *\n * - [`back`](docs/easing.html#back) provides a simple animation where the\n *   object goes slightly back before moving forward\n * - [`bounce`](docs/easing.html#bounce) provides a bouncing animation\n * - [`ease`](docs/easing.html#ease) provides a simple inertial animation\n * - [`elastic`](docs/easing.html#elastic) provides a simple spring interaction\n *\n * ### Standard functions\n *\n * Three standard easing functions are provided:\n *\n * - [`linear`](docs/easing.html#linear)\n * - [`quad`](docs/easing.html#quad)\n * - [`cubic`](docs/easing.html#cubic)\n *\n * The [`poly`](docs/easing.html#poly) function can be used to implement\n * quartic, quintic, and other higher power functions.\n *\n * ### Additional functions\n *\n * Additional mathematical functions are provided by the following methods:\n *\n * - [`bezier`](docs/easing.html#bezier) provides a cubic bezier curve\n * - [`circle`](docs/easing.html#circle) provides a circular function\n * - [`sin`](docs/easing.html#sin) provides a sinusoidal function\n * - [`exp`](docs/easing.html#exp) provides an exponential function\n *\n * The following helpers are used to modify other easing functions.\n *\n * - [`in`](docs/easing.html#in) runs an easing function forwards\n * - [`inOut`](docs/easing.html#inout) makes any easing function symmetrical\n * - [`out`](docs/easing.html#out) runs an easing function backwards\n */\n\nexport type EasingFn = (t: number) => number;\n\nexport type EasingFactoryFn = { factory: () => EasingFn };\n/**\n * A linear function, `f(t) = t`. Position correlates to elapsed time one to\n * one.\n *\n * http://cubic-bezier.com/#0,0,1,1\n */\nfunction linear(t: number): number {\n  'worklet';\n  return t;\n}\n\n/**\n * A simple inertial interaction, similar to an object slowly accelerating to\n * speed.\n *\n * http://cubic-bezier.com/#.42,0,1,1\n */\nfunction ease(t: number): number {\n  'worklet';\n  return Bezier(0.42, 0, 1, 1)(t);\n}\n\n/**\n * A quadratic function, `f(t) = t * t`. Position equals the square of elapsed\n * time.\n *\n * http://easings.net/#easeInQuad\n */\nfunction quad(t: number): number {\n  'worklet';\n  return t * t;\n}\n\n/**\n * A cubic function, `f(t) = t * t * t`. Position equals the cube of elapsed\n * time.\n *\n * http://easings.net/#easeInCubic\n */\nfunction cubic(t: number): number {\n  'worklet';\n  return t * t * t;\n}\n\n/**\n * A power function. Position is equal to the Nth power of elapsed time.\n *\n * n = 4: http://easings.net/#easeInQuart\n * n = 5: http://easings.net/#easeInQuint\n */\nfunction poly(n: number): EasingFn {\n  'worklet';\n  return (t) => {\n    'worklet';\n    return Math.pow(t, n);\n  };\n}\n\n/**\n * A sinusoidal function.\n *\n * http://easings.net/#easeInSine\n */\nfunction sin(t: number): number {\n  'worklet';\n  return 1 - Math.cos((t * Math.PI) / 2);\n}\n\n/**\n * A circular function.\n *\n * http://easings.net/#easeInCirc\n */\nfunction circle(t: number): number {\n  'worklet';\n  return 1 - Math.sqrt(1 - t * t);\n}\n\n/**\n * An exponential function.\n *\n * http://easings.net/#easeInExpo\n */\nfunction exp(t: number): number {\n  'worklet';\n  return Math.pow(2, 10 * (t - 1));\n}\n\n/**\n * A simple elastic interaction, similar to a spring oscillating back and\n * forth.\n *\n * Default bounciness is 1, which overshoots a little bit once. 0 bounciness\n * doesn't overshoot at all, and bounciness of N > 1 will overshoot about N\n * times.\n *\n * http://easings.net/#easeInElastic\n */\nfunction elastic(bounciness = 1): EasingFn {\n  'worklet';\n  const p = bounciness * Math.PI;\n  return (t) => {\n    'worklet';\n    return 1 - Math.pow(Math.cos((t * Math.PI) / 2), 3) * Math.cos(t * p);\n  };\n}\n\n/**\n * Use with `Animated.parallel()` to create a simple effect where the object\n * animates back slightly as the animation starts.\n *\n * Wolfram Plot:\n *\n * - http://tiny.cc/back_default (s = 1.70158, default)\n */\nfunction back(s = 1.70158): (t: number) => number {\n  'worklet';\n  return (t) => {\n    'worklet';\n    return t * t * ((s + 1) * t - s);\n  };\n}\n\n/**\n * Provides a simple bouncing effect.\n *\n * http://easings.net/#easeInBounce\n */\nfunction bounce(t: number): number {\n  'worklet';\n  if (t < 1 / 2.75) {\n    return 7.5625 * t * t;\n  }\n\n  if (t < 2 / 2.75) {\n    const t2 = t - 1.5 / 2.75;\n    return 7.5625 * t2 * t2 + 0.75;\n  }\n\n  if (t < 2.5 / 2.75) {\n    const t2 = t - 2.25 / 2.75;\n    return 7.5625 * t2 * t2 + 0.9375;\n  }\n\n  const t2 = t - 2.625 / 2.75;\n  return 7.5625 * t2 * t2 + 0.984375;\n}\n\n/**\n * Provides a cubic bezier curve, equivalent to CSS Transitions'\n * `transition-timing-function`.\n *\n * A useful tool to visualize cubic bezier curves can be found at\n * http://cubic-bezier.com/\n */\nfunction bezier(\n  x1: number,\n  y1: number,\n  x2: number,\n  y2: number\n): { factory: () => (x: number) => number } {\n  'worklet';\n  return {\n    factory: () => {\n      'worklet';\n      return Bezier(x1, y1, x2, y2);\n    },\n  };\n}\n\nfunction bezierFn(\n  x1: number,\n  y1: number,\n  x2: number,\n  y2: number\n): (x: number) => number {\n  'worklet';\n  return Bezier(x1, y1, x2, y2);\n}\n\n/**\n * Runs an easing function forwards.\n */\nfunction in_(easing: EasingFn): EasingFn {\n  'worklet';\n  return easing;\n}\n\n/**\n * Runs an easing function backwards.\n */\nfunction out(easing: EasingFn): EasingFn {\n  'worklet';\n  return (t) => {\n    'worklet';\n    return 1 - easing(1 - t);\n  };\n}\n\n/**\n * Makes any easing function symmetrical. The easing function will run\n * forwards for half of the duration, then backwards for the rest of the\n * duration.\n */\nfunction inOut(easing: EasingFn): EasingFn {\n  'worklet';\n  return (t) => {\n    'worklet';\n    if (t < 0.5) {\n      return easing(t * 2) / 2;\n    }\n    return 1 - easing((1 - t) * 2) / 2;\n  };\n}\n\nconst EasingObject = {\n  linear,\n  ease,\n  quad,\n  cubic,\n  poly,\n  sin,\n  circle,\n  exp,\n  elastic,\n  back,\n  bounce,\n  bezier,\n  bezierFn,\n  in: in_,\n  out,\n  inOut,\n};\n\nexport const Easing = EasingObject;\n"],"mappings":"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"}