{"version":3,"names":["JSReanimated","reanimatedJS","global","_makeShareableClone","c","_scheduleOnJS","setImmediate","_updatePropsJS","updates","viewRef","_component","component","rawStyles","Object","keys","reduce","acc","key","value","index","setNativeProps","props","length","forEach","dashedKey","replace","m","toLowerCase","_touchableNode","setAttribute","console","warn","style","previousStyle","currentStyle"],"sources":["index.ts"],"sourcesContent":["import JSReanimated from './JSReanimated';\nimport { AnimatedStyle, StyleProps } from '../commonTypes';\n\nconst reanimatedJS = new JSReanimated();\n\nglobal._makeShareableClone = (c) => c;\nglobal._scheduleOnJS = setImmediate;\n\ninterface JSReanimatedComponent {\n  previousStyle: StyleProps;\n  setNativeProps: (style: StyleProps) => void;\n  props: Record<string, string | number>;\n  _touchableNode: {\n    setAttribute: (key: string, props: unknown) => void;\n  };\n}\n\nexport const _updatePropsJS = (\n  updates: StyleProps | AnimatedStyle,\n  viewRef: { _component?: JSReanimatedComponent }\n): void => {\n  if (viewRef._component) {\n    const component = viewRef._component;\n    const [rawStyles] = Object.keys(updates).reduce(\n      (acc: [StyleProps, AnimatedStyle], key) => {\n        const value = updates[key];\n        const index = typeof value === 'function' ? 1 : 0;\n        acc[index][key] = value;\n        return acc;\n      },\n      [{}, {}]\n    );\n\n    if (typeof component.setNativeProps === 'function') {\n      setNativeProps(component, rawStyles);\n    } else if (Object.keys(component.props).length > 0) {\n      Object.keys(component.props).forEach((key) => {\n        if (!rawStyles[key]) {\n          return;\n        }\n        const dashedKey = key.replace(/[A-Z]/g, (m) => '-' + m.toLowerCase());\n        component._touchableNode.setAttribute(dashedKey, rawStyles[key]);\n      });\n    } else {\n      console.warn('It is not possible to manipulate component');\n    }\n  }\n};\n\nconst setNativeProps = (\n  component: JSReanimatedComponent,\n  style: StyleProps\n): void => {\n  const previousStyle = component.previousStyle ? component.previousStyle : {};\n  const currentStyle = { ...previousStyle, ...style };\n  component.previousStyle = currentStyle;\n  component.setNativeProps({ style: currentStyle });\n};\n\nexport default reanimatedJS;\n"],"mappings":"AAAA,OAAOA,YAAP,MAAyB,gBAAzB;AAGA,MAAMC,YAAY,GAAG,IAAID,YAAJ,EAArB;;AAEAE,MAAM,CAACC,mBAAP,GAA8BC,CAAD,IAAOA,CAApC;;AACAF,MAAM,CAACG,aAAP,GAAuBC,YAAvB;AAWA,OAAO,MAAMC,cAAc,GAAG,CAC5BC,OAD4B,EAE5BC,OAF4B,KAGnB;EACT,IAAIA,OAAO,CAACC,UAAZ,EAAwB;IACtB,MAAMC,SAAS,GAAGF,OAAO,CAACC,UAA1B;IACA,MAAM,CAACE,SAAD,IAAcC,MAAM,CAACC,IAAP,CAAYN,OAAZ,EAAqBO,MAArB,CAClB,CAACC,GAAD,EAAmCC,GAAnC,KAA2C;MACzC,MAAMC,KAAK,GAAGV,OAAO,CAACS,GAAD,CAArB;MACA,MAAME,KAAK,GAAG,OAAOD,KAAP,KAAiB,UAAjB,GAA8B,CAA9B,GAAkC,CAAhD;MACAF,GAAG,CAACG,KAAD,CAAH,CAAWF,GAAX,IAAkBC,KAAlB;MACA,OAAOF,GAAP;IACD,CANiB,EAOlB,CAAC,EAAD,EAAK,EAAL,CAPkB,CAApB;;IAUA,IAAI,OAAOL,SAAS,CAACS,cAAjB,KAAoC,UAAxC,EAAoD;MAClDA,cAAc,CAACT,SAAD,EAAYC,SAAZ,CAAd;IACD,CAFD,MAEO,IAAIC,MAAM,CAACC,IAAP,CAAYH,SAAS,CAACU,KAAtB,EAA6BC,MAA7B,GAAsC,CAA1C,EAA6C;MAClDT,MAAM,CAACC,IAAP,CAAYH,SAAS,CAACU,KAAtB,EAA6BE,OAA7B,CAAsCN,GAAD,IAAS;QAC5C,IAAI,CAACL,SAAS,CAACK,GAAD,CAAd,EAAqB;UACnB;QACD;;QACD,MAAMO,SAAS,GAAGP,GAAG,CAACQ,OAAJ,CAAY,QAAZ,EAAuBC,CAAD,IAAO,MAAMA,CAAC,CAACC,WAAF,EAAnC,CAAlB;;QACAhB,SAAS,CAACiB,cAAV,CAAyBC,YAAzB,CAAsCL,SAAtC,EAAiDZ,SAAS,CAACK,GAAD,CAA1D;MACD,CAND;IAOD,CARM,MAQA;MACLa,OAAO,CAACC,IAAR,CAAa,4CAAb;IACD;EACF;AACF,CA9BM;;AAgCP,MAAMX,cAAc,GAAG,CACrBT,SADqB,EAErBqB,KAFqB,KAGZ;EACT,MAAMC,aAAa,GAAGtB,SAAS,CAACsB,aAAV,GAA0BtB,SAAS,CAACsB,aAApC,GAAoD,EAA1E;EACA,MAAMC,YAAY,GAAG,EAAE,GAAGD,aAAL;IAAoB,GAAGD;EAAvB,CAArB;EACArB,SAAS,CAACsB,aAAV,GAA0BC,YAA1B;EACAvB,SAAS,CAACS,cAAV,CAAyB;IAAEY,KAAK,EAAEE;EAAT,CAAzB;AACD,CARD;;AAUA,eAAejC,YAAf"}