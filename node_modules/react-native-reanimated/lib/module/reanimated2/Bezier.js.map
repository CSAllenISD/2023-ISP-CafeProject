{"version":3,"names":["Bezier","mX1","mY1","mX2","mY2","NEWTON_ITERATIONS","NEWTON_MIN_SLOPE","SUBDIVISION_PRECISION","SUBDIVISION_MAX_ITERATIONS","kSplineTableSize","kSampleStepSize","A","aA1","aA2","B","C","calcBezier","aT","getSlope","binarySubdivide","aX","aA","aB","currentX","currentT","i","Math","abs","newtonRaphsonIterate","aGuessT","currentSlope","LinearEasing","x","Error","sampleValues","Array","getTForX","intervalStart","currentSample","lastSample","dist","guessForT","initialSlope","BezierEasing"],"sources":["Bezier.ts"],"sourcesContent":["/**\n * https://github.com/gre/bezier-easing\n * BezierEasing - use bezier curve for transition easing function\n * by Gaëtan Renaudeau 2014 - 2015 – MIT License\n */\n\n// These values are established by empiricism with tests (tradeoff: performance VS precision)\n\nexport function Bezier(\n  mX1: number,\n  mY1: number,\n  mX2: number,\n  mY2: number\n): (x: number) => number {\n  'worklet';\n\n  const NEWTON_ITERATIONS = 4;\n  const NEWTON_MIN_SLOPE = 0.001;\n  const SUBDIVISION_PRECISION = 0.0000001;\n  const SUBDIVISION_MAX_ITERATIONS = 10;\n\n  const kSplineTableSize = 11;\n  const kSampleStepSize = 1.0 / (kSplineTableSize - 1.0);\n\n  function A(aA1: number, aA2: number): number {\n    'worklet';\n    return 1.0 - 3.0 * aA2 + 3.0 * aA1;\n  }\n  function B(aA1: number, aA2: number): number {\n    'worklet';\n    return 3.0 * aA2 - 6.0 * aA1;\n  }\n  function C(aA1: number) {\n    'worklet';\n    return 3.0 * aA1;\n  }\n\n  // Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\n  function calcBezier(aT: number, aA1: number, aA2: number): number {\n    'worklet';\n    return ((A(aA1, aA2) * aT + B(aA1, aA2)) * aT + C(aA1)) * aT;\n  }\n\n  // Returns dx/dt given t, x1, and x2, or dy/dt given t, y1, and y2.\n  function getSlope(aT: number, aA1: number, aA2: number): number {\n    'worklet';\n    return 3.0 * A(aA1, aA2) * aT * aT + 2.0 * B(aA1, aA2) * aT + C(aA1);\n  }\n\n  function binarySubdivide(\n    aX: number,\n    aA: number,\n    aB: number,\n    mX1: number,\n    mX2: number\n  ): number {\n    'worklet';\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n      currentT = aA + (aB - aA) / 2.0;\n      currentX = calcBezier(currentT, mX1, mX2) - aX;\n      if (currentX > 0.0) {\n        aB = currentT;\n      } else {\n        aA = currentT;\n      }\n    } while (\n      Math.abs(currentX) > SUBDIVISION_PRECISION &&\n      ++i < SUBDIVISION_MAX_ITERATIONS\n    );\n    return currentT;\n  }\n\n  function newtonRaphsonIterate(\n    aX: number,\n    aGuessT: number,\n    mX1: number,\n    mX2: number\n  ): number {\n    'worklet';\n    for (let i = 0; i < NEWTON_ITERATIONS; ++i) {\n      const currentSlope = getSlope(aGuessT, mX1, mX2);\n      if (currentSlope === 0.0) {\n        return aGuessT;\n      }\n      const currentX = calcBezier(aGuessT, mX1, mX2) - aX;\n      aGuessT -= currentX / currentSlope;\n    }\n    return aGuessT;\n  }\n\n  function LinearEasing(x: number): number {\n    'worklet';\n    return x;\n  }\n\n  if (!(mX1 >= 0 && mX1 <= 1 && mX2 >= 0 && mX2 <= 1)) {\n    throw new Error('bezier x values must be in [0, 1] range');\n  }\n\n  if (mX1 === mY1 && mX2 === mY2) {\n    return LinearEasing;\n  }\n\n  // FIXME: Float32Array is not available in Hermes right now\n  //\n  // var float32ArraySupported = typeof Float32Array === 'function';\n  // const sampleValues = float32ArraySupported\n  // ? new Float32Array(kSplineTableSize)\n  // : new Array(kSplineTableSize);\n\n  // Precompute samples table\n  const sampleValues = new Array(kSplineTableSize);\n\n  for (let i = 0; i < kSplineTableSize; ++i) {\n    sampleValues[i] = calcBezier(i * kSampleStepSize, mX1, mX2);\n  }\n\n  function getTForX(aX: number): number {\n    'worklet';\n    let intervalStart = 0.0;\n    let currentSample = 1;\n    const lastSample = kSplineTableSize - 1;\n\n    for (\n      ;\n      currentSample !== lastSample && sampleValues[currentSample] <= aX;\n      ++currentSample\n    ) {\n      intervalStart += kSampleStepSize;\n    }\n    --currentSample;\n\n    // Interpolate to provide an initial guess for t\n    const dist =\n      (aX - sampleValues[currentSample]) /\n      (sampleValues[currentSample + 1] - sampleValues[currentSample]);\n    const guessForT = intervalStart + dist * kSampleStepSize;\n\n    const initialSlope = getSlope(guessForT, mX1, mX2);\n    if (initialSlope >= NEWTON_MIN_SLOPE) {\n      return newtonRaphsonIterate(aX, guessForT, mX1, mX2);\n    } else if (initialSlope === 0.0) {\n      return guessForT;\n    } else {\n      return binarySubdivide(\n        aX,\n        intervalStart,\n        intervalStart + kSampleStepSize,\n        mX1,\n        mX2\n      );\n    }\n  }\n\n  return function BezierEasing(x) {\n    'worklet';\n    if (mX1 === mY1 && mX2 === mY2) {\n      return x; // linear\n    }\n    // Because JavaScript number are imprecise, we should guarantee the extremes are right.\n    if (x === 0) {\n      return 0;\n    }\n    if (x === 1) {\n      return 1;\n    }\n    return calcBezier(getTForX(x), mY1, mY2);\n  };\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AAEA;AAEA,OAAO,SAASA,MAAT,CACLC,GADK,EAELC,GAFK,EAGLC,GAHK,EAILC,GAJK,EAKkB;EACvB;;EAEA,MAAMC,iBAAiB,GAAG,CAA1B;EACA,MAAMC,gBAAgB,GAAG,KAAzB;EACA,MAAMC,qBAAqB,GAAG,SAA9B;EACA,MAAMC,0BAA0B,GAAG,EAAnC;EAEA,MAAMC,gBAAgB,GAAG,EAAzB;EACA,MAAMC,eAAe,GAAG,OAAOD,gBAAgB,GAAG,GAA1B,CAAxB;;EAEA,SAASE,CAAT,CAAWC,GAAX,EAAwBC,GAAxB,EAA6C;IAC3C;;IACA,OAAO,MAAM,MAAMA,GAAZ,GAAkB,MAAMD,GAA/B;EACD;;EACD,SAASE,CAAT,CAAWF,GAAX,EAAwBC,GAAxB,EAA6C;IAC3C;;IACA,OAAO,MAAMA,GAAN,GAAY,MAAMD,GAAzB;EACD;;EACD,SAASG,CAAT,CAAWH,GAAX,EAAwB;IACtB;;IACA,OAAO,MAAMA,GAAb;EACD,CAtBsB,CAwBvB;;;EACA,SAASI,UAAT,CAAoBC,EAApB,EAAgCL,GAAhC,EAA6CC,GAA7C,EAAkE;IAChE;;IACA,OAAO,CAAC,CAACF,CAAC,CAACC,GAAD,EAAMC,GAAN,CAAD,GAAcI,EAAd,GAAmBH,CAAC,CAACF,GAAD,EAAMC,GAAN,CAArB,IAAmCI,EAAnC,GAAwCF,CAAC,CAACH,GAAD,CAA1C,IAAmDK,EAA1D;EACD,CA5BsB,CA8BvB;;;EACA,SAASC,QAAT,CAAkBD,EAAlB,EAA8BL,GAA9B,EAA2CC,GAA3C,EAAgE;IAC9D;;IACA,OAAO,MAAMF,CAAC,CAACC,GAAD,EAAMC,GAAN,CAAP,GAAoBI,EAApB,GAAyBA,EAAzB,GAA8B,MAAMH,CAAC,CAACF,GAAD,EAAMC,GAAN,CAAP,GAAoBI,EAAlD,GAAuDF,CAAC,CAACH,GAAD,CAA/D;EACD;;EAED,SAASO,eAAT,CACEC,EADF,EAEEC,EAFF,EAGEC,EAHF,EAIErB,GAJF,EAKEE,GALF,EAMU;IACR;;IACA,IAAIoB,QAAJ;IACA,IAAIC,QAAJ;IACA,IAAIC,CAAC,GAAG,CAAR;;IACA,GAAG;MACDD,QAAQ,GAAGH,EAAE,GAAG,CAACC,EAAE,GAAGD,EAAN,IAAY,GAA5B;MACAE,QAAQ,GAAGP,UAAU,CAACQ,QAAD,EAAWvB,GAAX,EAAgBE,GAAhB,CAAV,GAAiCiB,EAA5C;;MACA,IAAIG,QAAQ,GAAG,GAAf,EAAoB;QAClBD,EAAE,GAAGE,QAAL;MACD,CAFD,MAEO;QACLH,EAAE,GAAGG,QAAL;MACD;IACF,CARD,QASEE,IAAI,CAACC,GAAL,CAASJ,QAAT,IAAqBhB,qBAArB,IACA,EAAEkB,CAAF,GAAMjB,0BAVR;;IAYA,OAAOgB,QAAP;EACD;;EAED,SAASI,oBAAT,CACER,EADF,EAEES,OAFF,EAGE5B,GAHF,EAIEE,GAJF,EAKU;IACR;;IACA,KAAK,IAAIsB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGpB,iBAApB,EAAuC,EAAEoB,CAAzC,EAA4C;MAC1C,MAAMK,YAAY,GAAGZ,QAAQ,CAACW,OAAD,EAAU5B,GAAV,EAAeE,GAAf,CAA7B;;MACA,IAAI2B,YAAY,KAAK,GAArB,EAA0B;QACxB,OAAOD,OAAP;MACD;;MACD,MAAMN,QAAQ,GAAGP,UAAU,CAACa,OAAD,EAAU5B,GAAV,EAAeE,GAAf,CAAV,GAAgCiB,EAAjD;MACAS,OAAO,IAAIN,QAAQ,GAAGO,YAAtB;IACD;;IACD,OAAOD,OAAP;EACD;;EAED,SAASE,YAAT,CAAsBC,CAAtB,EAAyC;IACvC;;IACA,OAAOA,CAAP;EACD;;EAED,IAAI,EAAE/B,GAAG,IAAI,CAAP,IAAYA,GAAG,IAAI,CAAnB,IAAwBE,GAAG,IAAI,CAA/B,IAAoCA,GAAG,IAAI,CAA7C,CAAJ,EAAqD;IACnD,MAAM,IAAI8B,KAAJ,CAAU,yCAAV,CAAN;EACD;;EAED,IAAIhC,GAAG,KAAKC,GAAR,IAAeC,GAAG,KAAKC,GAA3B,EAAgC;IAC9B,OAAO2B,YAAP;EACD,CA3FsB,CA6FvB;EACA;EACA;EACA;EACA;EACA;EAEA;;;EACA,MAAMG,YAAY,GAAG,IAAIC,KAAJ,CAAU1B,gBAAV,CAArB;;EAEA,KAAK,IAAIgB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGhB,gBAApB,EAAsC,EAAEgB,CAAxC,EAA2C;IACzCS,YAAY,CAACT,CAAD,CAAZ,GAAkBT,UAAU,CAACS,CAAC,GAAGf,eAAL,EAAsBT,GAAtB,EAA2BE,GAA3B,CAA5B;EACD;;EAED,SAASiC,QAAT,CAAkBhB,EAAlB,EAAsC;IACpC;;IACA,IAAIiB,aAAa,GAAG,GAApB;IACA,IAAIC,aAAa,GAAG,CAApB;IACA,MAAMC,UAAU,GAAG9B,gBAAgB,GAAG,CAAtC;;IAEA,OAEE6B,aAAa,KAAKC,UAAlB,IAAgCL,YAAY,CAACI,aAAD,CAAZ,IAA+BlB,EAFjE,EAGE,EAAEkB,aAHJ,EAIE;MACAD,aAAa,IAAI3B,eAAjB;IACD;;IACD,EAAE4B,aAAF,CAboC,CAepC;;IACA,MAAME,IAAI,GACR,CAACpB,EAAE,GAAGc,YAAY,CAACI,aAAD,CAAlB,KACCJ,YAAY,CAACI,aAAa,GAAG,CAAjB,CAAZ,GAAkCJ,YAAY,CAACI,aAAD,CAD/C,CADF;IAGA,MAAMG,SAAS,GAAGJ,aAAa,GAAGG,IAAI,GAAG9B,eAAzC;IAEA,MAAMgC,YAAY,GAAGxB,QAAQ,CAACuB,SAAD,EAAYxC,GAAZ,EAAiBE,GAAjB,CAA7B;;IACA,IAAIuC,YAAY,IAAIpC,gBAApB,EAAsC;MACpC,OAAOsB,oBAAoB,CAACR,EAAD,EAAKqB,SAAL,EAAgBxC,GAAhB,EAAqBE,GAArB,CAA3B;IACD,CAFD,MAEO,IAAIuC,YAAY,KAAK,GAArB,EAA0B;MAC/B,OAAOD,SAAP;IACD,CAFM,MAEA;MACL,OAAOtB,eAAe,CACpBC,EADoB,EAEpBiB,aAFoB,EAGpBA,aAAa,GAAG3B,eAHI,EAIpBT,GAJoB,EAKpBE,GALoB,CAAtB;IAOD;EACF;;EAED,OAAO,SAASwC,YAAT,CAAsBX,CAAtB,EAAyB;IAC9B;;IACA,IAAI/B,GAAG,KAAKC,GAAR,IAAeC,GAAG,KAAKC,GAA3B,EAAgC;MAC9B,OAAO4B,CAAP,CAD8B,CACpB;IACX,CAJ6B,CAK9B;;;IACA,IAAIA,CAAC,KAAK,CAAV,EAAa;MACX,OAAO,CAAP;IACD;;IACD,IAAIA,CAAC,KAAK,CAAV,EAAa;MACX,OAAO,CAAP;IACD;;IACD,OAAOhB,UAAU,CAACoB,QAAQ,CAACJ,CAAD,CAAT,EAAc9B,GAAd,EAAmBE,GAAnB,CAAjB;EACD,CAbD;AAcD"}