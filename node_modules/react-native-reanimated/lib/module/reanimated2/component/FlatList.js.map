{"version":3,"names":["React","forwardRef","FlatList","StyleSheet","ReanimatedView","createAnimatedComponent","AnimatedFlatList","createCellRenderer","itemLayoutAnimation","cellStyle","cellRenderer","props","onLayout","children","ReanimatedFlatlist","ref","restProps","inverted","horizontal","styles","horizontallyInverted","verticallyInverted","undefined","useMemo","create","transform","scaleY","scaleX"],"sources":["FlatList.tsx"],"sourcesContent":["import React, { ForwardedRef, forwardRef } from 'react';\nimport {\n  FlatList,\n  FlatListProps,\n  LayoutChangeEvent,\n  StyleSheet,\n} from 'react-native';\nimport ReanimatedView from './View';\nimport createAnimatedComponent from '../../createAnimatedComponent';\nimport { ILayoutAnimationBuilder } from '../layoutReanimation/animationBuilder/commonTypes';\nimport { StyleProps } from '../commonTypes';\n\nconst AnimatedFlatList = createAnimatedComponent(FlatList as any) as any;\n\ninterface AnimatedFlatListProps {\n  onLayout: (event: LayoutChangeEvent) => void;\n  // implicit `children` prop has been removed in @types/react^18.0.0\n  children: React.ReactNode;\n  inverted?: boolean;\n  horizontal?: boolean;\n}\n\nconst createCellRenderer = (\n  itemLayoutAnimation?: ILayoutAnimationBuilder,\n  cellStyle?: StyleProps\n) => {\n  const cellRenderer = (props: AnimatedFlatListProps) => {\n    return (\n      <ReanimatedView\n        layout={itemLayoutAnimation}\n        onLayout={props.onLayout}\n        style={cellStyle}>\n        {props.children}\n      </ReanimatedView>\n    );\n  };\n\n  return cellRenderer;\n};\n\nexport interface ReanimatedFlatListProps<ItemT> extends FlatListProps<ItemT> {\n  itemLayoutAnimation?: ILayoutAnimationBuilder;\n}\n\ntype ReanimatedFlatListFC<T = any> = React.FC<ReanimatedFlatListProps<T>>;\n\nconst ReanimatedFlatlist: ReanimatedFlatListFC = forwardRef(\n  (props: ReanimatedFlatListProps<any>, ref: ForwardedRef<FlatList>) => {\n    const { itemLayoutAnimation, ...restProps } = props;\n\n    const cellStyle = restProps?.inverted\n      ? restProps?.horizontal\n        ? styles.horizontallyInverted\n        : styles.verticallyInverted\n      : undefined;\n\n    const cellRenderer = React.useMemo(\n      () => createCellRenderer(itemLayoutAnimation, cellStyle),\n      [cellStyle]\n    );\n\n    return (\n      <AnimatedFlatList\n        ref={ref}\n        {...restProps}\n        CellRendererComponent={cellRenderer}\n      />\n    );\n  }\n);\n\nconst styles = StyleSheet.create({\n  verticallyInverted: { transform: [{ scaleY: -1 }] },\n  horizontallyInverted: { transform: [{ scaleX: -1 }] },\n});\n\nexport default ReanimatedFlatlist;\n"],"mappings":";;AAAA,OAAOA,KAAP,IAA8BC,UAA9B,QAAgD,OAAhD;AACA,SACEC,QADF,EAIEC,UAJF,QAKO,cALP;AAMA,OAAOC,cAAP,MAA2B,QAA3B;AACA,OAAOC,uBAAP,MAAoC,+BAApC;AAIA,MAAMC,gBAAgB,GAAGD,uBAAuB,CAACH,QAAD,CAAhD;;AAUA,MAAMK,kBAAkB,GAAG,CACzBC,mBADyB,EAEzBC,SAFyB,KAGtB;EACH,MAAMC,YAAY,GAAIC,KAAD,IAAkC;IACrD,oBACE,oBAAC,cAAD;MACE,MAAM,EAAEH,mBADV;MAEE,QAAQ,EAAEG,KAAK,CAACC,QAFlB;MAGE,KAAK,EAAEH;IAHT,GAIGE,KAAK,CAACE,QAJT,CADF;EAQD,CATD;;EAWA,OAAOH,YAAP;AACD,CAhBD;;AAwBA,MAAMI,kBAAwC,gBAAGb,UAAU,CACzD,CAACU,KAAD,EAAsCI,GAAtC,KAAsE;EACpE,MAAM;IAAEP,mBAAF;IAAuB,GAAGQ;EAA1B,IAAwCL,KAA9C;EAEA,MAAMF,SAAS,GAAGO,SAAS,SAAT,IAAAA,SAAS,WAAT,IAAAA,SAAS,CAAEC,QAAX,GACdD,SAAS,SAAT,IAAAA,SAAS,WAAT,IAAAA,SAAS,CAAEE,UAAX,GACEC,MAAM,CAACC,oBADT,GAEED,MAAM,CAACE,kBAHK,GAIdC,SAJJ;EAMA,MAAMZ,YAAY,GAAGV,KAAK,CAACuB,OAAN,CACnB,MAAMhB,kBAAkB,CAACC,mBAAD,EAAsBC,SAAtB,CADL,EAEnB,CAACA,SAAD,CAFmB,CAArB;EAKA,oBACE,oBAAC,gBAAD;IACE,GAAG,EAAEM;EADP,GAEMC,SAFN;IAGE,qBAAqB,EAAEN;EAHzB,GADF;AAOD,CAtBwD,CAA3D;AAyBA,MAAMS,MAAM,GAAGhB,UAAU,CAACqB,MAAX,CAAkB;EAC/BH,kBAAkB,EAAE;IAAEI,SAAS,EAAE,CAAC;MAAEC,MAAM,EAAE,CAAC;IAAX,CAAD;EAAb,CADW;EAE/BN,oBAAoB,EAAE;IAAEK,SAAS,EAAE,CAAC;MAAEE,MAAM,EAAE,CAAC;IAAX,CAAD;EAAb;AAFS,CAAlB,CAAf;AAKA,eAAeb,kBAAf"}