{"version":3,"names":["NativeReanimatedModule","registerEventHandler","unregisterEventHandler","jsListener","eventName","handler","evt","nativeEvent","WorkletEventHandler","constructor","worklet","eventNames","reattachNeeded","listeners","viewTag","undefined","registrations","native","reduce","acc","updateWorklet","newWorklet","registerForEvents","fallbackEventName","map","length","push","unregisterFromEvents","forEach","id"],"sources":["WorkletEventHandler.ts"],"sourcesContent":["import { NativeEvent } from './commonTypes';\nimport NativeReanimatedModule from './NativeReanimated';\nimport { registerEventHandler, unregisterEventHandler } from './core';\n\nfunction jsListener<T extends NativeEvent<T>>(\n  eventName: string,\n  handler: (event: T) => void\n) {\n  return (evt: T) => {\n    handler({ ...evt.nativeEvent, eventName });\n  };\n}\n\nexport default class WorkletEventHandler<T extends NativeEvent<T>> {\n  worklet: (event: T) => void;\n  eventNames: string[];\n  reattachNeeded: boolean;\n  listeners: Record<string, (event: T) => void>;\n  viewTag: number | undefined;\n  registrations: string[];\n  constructor(worklet: (event: T) => void, eventNames: string[] = []) {\n    this.worklet = worklet;\n    this.eventNames = eventNames;\n    this.reattachNeeded = false;\n    this.listeners = {};\n    this.viewTag = undefined;\n    this.registrations = [];\n\n    if (!NativeReanimatedModule.native) {\n      this.listeners = eventNames.reduce(\n        (acc: Record<string, (event: T) => void>, eventName: string) => {\n          acc[eventName] = jsListener(eventName, worklet);\n          return acc;\n        },\n        {}\n      );\n    }\n  }\n\n  updateWorklet(newWorklet: (event: T) => void): void {\n    this.worklet = newWorklet;\n    this.reattachNeeded = true;\n  }\n\n  registerForEvents(viewTag: number, fallbackEventName?: string): void {\n    this.viewTag = viewTag;\n    this.registrations = this.eventNames.map((eventName) =>\n      registerEventHandler(viewTag + eventName, this.worklet)\n    );\n    if (this.registrations.length === 0 && fallbackEventName) {\n      this.registrations.push(\n        registerEventHandler(viewTag + fallbackEventName, this.worklet)\n      );\n    }\n  }\n\n  unregisterFromEvents(): void {\n    this.registrations.forEach((id) => unregisterEventHandler(id));\n    this.registrations = [];\n  }\n}\n"],"mappings":";;AACA,OAAOA,sBAAP,MAAmC,oBAAnC;AACA,SAASC,oBAAT,EAA+BC,sBAA/B,QAA6D,QAA7D;;AAEA,SAASC,UAAT,CACEC,SADF,EAEEC,OAFF,EAGE;EACA,OAAQC,GAAD,IAAY;IACjBD,OAAO,CAAC,EAAE,GAAGC,GAAG,CAACC,WAAT;MAAsBH;IAAtB,CAAD,CAAP;EACD,CAFD;AAGD;;AAED,eAAe,MAAMI,mBAAN,CAAoD;EAOjEC,WAAW,CAACC,OAAD,EAAyD;IAAA,IAA3BC,UAA2B,uEAAJ,EAAI;;IAAA;;IAAA;;IAAA;;IAAA;;IAAA;;IAAA;;IAClE,KAAKD,OAAL,GAAeA,OAAf;IACA,KAAKC,UAAL,GAAkBA,UAAlB;IACA,KAAKC,cAAL,GAAsB,KAAtB;IACA,KAAKC,SAAL,GAAiB,EAAjB;IACA,KAAKC,OAAL,GAAeC,SAAf;IACA,KAAKC,aAAL,GAAqB,EAArB;;IAEA,IAAI,CAAChB,sBAAsB,CAACiB,MAA5B,EAAoC;MAClC,KAAKJ,SAAL,GAAiBF,UAAU,CAACO,MAAX,CACf,CAACC,GAAD,EAA0Cf,SAA1C,KAAgE;QAC9De,GAAG,CAACf,SAAD,CAAH,GAAiBD,UAAU,CAACC,SAAD,EAAYM,OAAZ,CAA3B;QACA,OAAOS,GAAP;MACD,CAJc,EAKf,EALe,CAAjB;IAOD;EACF;;EAEDC,aAAa,CAACC,UAAD,EAAuC;IAClD,KAAKX,OAAL,GAAeW,UAAf;IACA,KAAKT,cAAL,GAAsB,IAAtB;EACD;;EAEDU,iBAAiB,CAACR,OAAD,EAAkBS,iBAAlB,EAAoD;IACnE,KAAKT,OAAL,GAAeA,OAAf;IACA,KAAKE,aAAL,GAAqB,KAAKL,UAAL,CAAgBa,GAAhB,CAAqBpB,SAAD,IACvCH,oBAAoB,CAACa,OAAO,GAAGV,SAAX,EAAsB,KAAKM,OAA3B,CADD,CAArB;;IAGA,IAAI,KAAKM,aAAL,CAAmBS,MAAnB,KAA8B,CAA9B,IAAmCF,iBAAvC,EAA0D;MACxD,KAAKP,aAAL,CAAmBU,IAAnB,CACEzB,oBAAoB,CAACa,OAAO,GAAGS,iBAAX,EAA8B,KAAKb,OAAnC,CADtB;IAGD;EACF;;EAEDiB,oBAAoB,GAAS;IAC3B,KAAKX,aAAL,CAAmBY,OAAnB,CAA4BC,EAAD,IAAQ3B,sBAAsB,CAAC2B,EAAD,CAAzD;IACA,KAAKb,aAAL,GAAqB,EAArB;EACD;;AA9CgE"}