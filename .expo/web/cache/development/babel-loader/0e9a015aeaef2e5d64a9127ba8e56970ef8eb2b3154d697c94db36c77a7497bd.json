{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport useWindowDimensions from \"react-native-web/dist/exports/useWindowDimensions\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Logo from \"../../assets/images/projectLogo.png\";\nimport CustomInput from \"../components/CustomInput\";\nimport CustomButton from \"../components/CustomButton/CustomButton\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { StatusBar } from 'expo-status-bar';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function SignInScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    username = _useState2[0],\n    setUsername = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var _useWindowDimensions = useWindowDimensions(),\n    height = _useWindowDimensions.height;\n  var onSignInPressed = function onSignInPressed() {\n    if (username.trim().length !== 0 && password.trim().length !== 0) {\n      navigation.navigate(\"Menu\");\n    } else {\n      Alert.alert('Invalid username or password', '', [{\n        text: 'OK'\n      }]);\n    }\n  };\n  return _jsxs(View, {\n    style: styles.root,\n    children: [_jsx(Image, {\n      source: Logo,\n      style: [styles.logo, {\n        height: height * 0.3\n      }],\n      resizeMode: \"contain\"\n    }), _jsx(CustomInput, {\n      placeHolder: \"Username\",\n      value: username,\n      setValue: setUsername\n    }), _jsx(CustomInput, {\n      placeHolder: \"Password\",\n      value: password,\n      setValue: setPassword,\n      secureTextEntry: true\n    }), _jsx(CustomButton, {\n      text: \"Sign In\",\n      onPress: onSignInPressed\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  root: {\n    alignItems: 'center',\n    padding: 80\n  },\n  logo: {\n    width: '60%',\n    maxWidth: 500,\n    maxHeight: 200\n  }\n});","map":{"version":3,"names":["React","useState","Logo","CustomInput","CustomButton","NavigationContainer","createNativeStackNavigator","StatusBar","SignInScreen","navigation","username","setUsername","password","setPassword","useWindowDimensions","height","onSignInPressed","trim","length","navigate","Alert","alert","text","styles","root","logo","StyleSheet","create","alignItems","padding","width","maxWidth","maxHeight"],"sources":["C:/Users/mcand/OneDrive/Documents/GitHub/2023-ISP-CafeProject/src/screens/SignInScreen.js"],"sourcesContent":["import React, {useState} from 'react';\r\nimport { View, Text, Image, StyleSheet, useWindowDimensions, Button, Alert } from 'react-native';\r\nimport Logo from '../../assets/images/projectLogo.png';\r\nimport CustomInput from '../components/CustomInput';\r\nimport CustomButton from '../components/CustomButton/CustomButton';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport { StatusBar } from 'expo-status-bar';\r\nexport default function SignInScreen({ navigation }) {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const {height} = useWindowDimensions();\r\n\r\n  const onSignInPressed =() => {\r\n    if (username.trim().length !== 0 && (password.trim().length !==0)) {\r\n        navigation.navigate(\"Menu\")\r\n      } else {\r\n        Alert.alert('Invalid username or password', '', [\r\n\r\n            {text: 'OK'},\r\n          ]);\r\n      }\r\n\r\n  }\r\n\r\n  return (\r\n      <View style={styles.root}>\r\n          <Image\r\n           source={Logo} \r\n           style={[styles.logo, {height: height * 0.3}]} \r\n           resizeMode=\"contain\" \r\n           />\r\n           <CustomInput \r\n           placeHolder=\"Username\" \r\n           value={username} \r\n           setValue={setUsername} \r\n           />\r\n           <CustomInput \r\n           placeHolder=\"Password\" \r\n           value={password} \r\n           setValue={setPassword} \r\n           secureTextEntry={true}\r\n           />\r\n\r\n    <CustomButton text=\"Sign In\" onPress={onSignInPressed} />\r\n      </View>\r\n  )\r\n}\r\nconst styles = StyleSheet.create({\r\n  root: {\r\n      alignItems: 'center',\r\n      padding: 80,\r\n  },\r\n  logo: {\r\n      width: '60%',\r\n      maxWidth: 500,\r\n      maxHeight: 200,\r\n  },\r\n});"],"mappings":";AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEtC,OAAOC,IAAI;AACX,OAAOC,WAAW;AAClB,OAAOC,YAAY;AACnB,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,0BAA0B,QAAQ,gCAAgC;AAC3E,SAASC,SAAS,QAAQ,iBAAiB;AAAC;AAAA;AAC5C,eAAe,SAASC,YAAY,OAAiB;EAAA,IAAdC,UAAU,QAAVA,UAAU;EAC/C,gBAAgCR,QAAQ,CAAC,EAAE,CAAC;IAAA;IAArCS,QAAQ;IAAEC,WAAW;EAC5B,iBAAgCV,QAAQ,CAAC,EAAE,CAAC;IAAA;IAArCW,QAAQ;IAAEC,WAAW;EAC5B,2BAAiBC,mBAAmB,EAAE;IAA/BC,MAAM,wBAANA,MAAM;EAEb,IAAMC,eAAe,GAAE,SAAjBA,eAAe,GAAQ;IAC3B,IAAIN,QAAQ,CAACO,IAAI,EAAE,CAACC,MAAM,KAAK,CAAC,IAAKN,QAAQ,CAACK,IAAI,EAAE,CAACC,MAAM,KAAI,CAAE,EAAE;MAC/DT,UAAU,CAACU,QAAQ,CAAC,MAAM,CAAC;IAC7B,CAAC,MAAM;MACLC,KAAK,CAACC,KAAK,CAAC,8BAA8B,EAAE,EAAE,EAAE,CAE5C;QAACC,IAAI,EAAE;MAAI,CAAC,CACb,CAAC;IACN;EAEJ,CAAC;EAED,OACI,MAAC,IAAI;IAAC,KAAK,EAAEC,MAAM,CAACC,IAAK;IAAA,WACrB,KAAC,KAAK;MACL,MAAM,EAAEtB,IAAK;MACb,KAAK,EAAE,CAACqB,MAAM,CAACE,IAAI,EAAE;QAACV,MAAM,EAAEA,MAAM,GAAG;MAAG,CAAC,CAAE;MAC7C,UAAU,EAAC;IAAS,EAClB,EACF,KAAC,WAAW;MACZ,WAAW,EAAC,UAAU;MACtB,KAAK,EAAEL,QAAS;MAChB,QAAQ,EAAEC;IAAY,EACpB,EACF,KAAC,WAAW;MACZ,WAAW,EAAC,UAAU;MACtB,KAAK,EAAEC,QAAS;MAChB,QAAQ,EAAEC,WAAY;MACtB,eAAe,EAAE;IAAK,EACpB,EAET,KAAC,YAAY;MAAC,IAAI,EAAC,SAAS;MAAC,OAAO,EAAEG;IAAgB,EAAG;EAAA,EAChD;AAEb;AACA,IAAMO,MAAM,GAAGG,UAAU,CAACC,MAAM,CAAC;EAC/BH,IAAI,EAAE;IACFI,UAAU,EAAE,QAAQ;IACpBC,OAAO,EAAE;EACb,CAAC;EACDJ,IAAI,EAAE;IACFK,KAAK,EAAE,KAAK;IACZC,QAAQ,EAAE,GAAG;IACbC,SAAS,EAAE;EACf;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}