{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { useFonts, Mynerve_400Regular } from '@expo-google-fonts/mynerve';\nimport CustomInput from \"../components/CustomInput\";\nimport CustomButton from \"../components/CustomButton/CustomButton\";\nimport Dialog from \"react-native-dialog\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function MenuScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useFonts = useFonts({\n      Mynerve_400Regular: Mynerve_400Regular\n    }),\n    _useFonts2 = _slicedToArray(_useFonts, 1),\n    fontsLoaded = _useFonts2[0];\n  if (!fontsLoaded) {\n    return null;\n  }\n  var onCartPressed = function onCartPressed() {\n    navigation.navigate(\"Checkout\");\n  };\n  return _jsx(SafeAreaView, {\n    style: styles.container,\n    children: _jsx(ScrollView, {\n      style: styles.scrollView,\n      children: _jsxs(View, {\n        style: styles.body,\n        children: [_jsx(CustomButton, {\n          text: \"Go to Checkout\",\n          onPress: onCartPressed\n        }), _jsx(Text, {\n          style: styles.food,\n          children: \" ENTREE\"\n        }), _jsx(Image, {\n          style: styles.image,\n          source: require(\"../../assets/images/chicken_burger.jpg\")\n        }), _jsx(Text, {\n          style: styles.description,\n          children: \" Chicken Sandwich\"\n        }), _jsx(Text, {\n          style: styles.price,\n          children: \" Price: $2.75\"\n        }), _jsx(Text, {\n          style: styles.price,\n          children: \" Item #: 100 \"\n        })]\n      })\n    })\n  });\n}\n;\nvar styles = StyleSheet.create({\n  header: {\n    fontSize: 50,\n    fontWeight: \"bold\",\n    textAlign: \"center\",\n    textDecorationLine: \"underline\"\n  },\n  image: {\n    height: \"50%\",\n    width: \"100%\",\n    resizeMode: \"cover\",\n    borderBottomLeftRadius: 10,\n    borderBottomRightRadius: 10,\n    borderTopRightRadius: 10,\n    borderTopLeftRadius: 10\n  },\n  body: {\n    borderColor: \"gold\",\n    backgroundColor: \"gold\"\n  },\n  food: {\n    color: \"red\",\n    fontWeight: \"500\",\n    fontFamily: \"Mynerve_400Regular\",\n    fontSize: 30,\n    textAlign: \"center\",\n    padding: 20\n  },\n  description: {\n    color: \"black\",\n    fontStyle: \"italic\",\n    fontWeight: \"500\",\n    fontFamily: \"Mynerve_400Regular\",\n    fontSize: 25,\n    textAlign: \"center\",\n    padding: 20\n  },\n  price: {\n    color: \"black\",\n    fontStyle: \"italic\",\n    fontWeight: \"500\",\n    fontFamily: \"Mynerve_400Regular\",\n    fontSize: 20,\n    textAlign: \"center\",\n    padding: 10\n  }\n});","map":{"version":3,"names":["React","useState","NavigationContainer","createNativeStackNavigator","useFonts","Mynerve_400Regular","CustomInput","CustomButton","Dialog","MenuScreen","navigation","fontsLoaded","onCartPressed","navigate","styles","container","scrollView","body","food","image","require","description","price","StyleSheet","create","header","fontSize","fontWeight","textAlign","textDecorationLine","height","width","resizeMode","borderBottomLeftRadius","borderBottomRightRadius","borderTopRightRadius","borderTopLeftRadius","borderColor","backgroundColor","color","fontFamily","padding","fontStyle"],"sources":["C:/Users/mcand/OneDrive/Documents/GitHub/2023-ISP-CafeProject/src/screens/MenuScreen.js"],"sourcesContent":["import React, {useState} from 'react';\r\nimport  {Text, View, StyleSheet, Image, Alert, Button, ScrollView, SafeAreaView} from 'react-native';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport { useFonts, Mynerve_400Regular } from '@expo-google-fonts/mynerve';\r\nimport CustomInput from '../components/CustomInput';\r\nimport CustomButton from '../components/CustomButton/CustomButton';\r\nimport Dialog from \"react-native-dialog\";\r\n\r\nexport default function MenuScreen({ navigation }) {\r\n  \r\n\r\n  let [fontsLoaded] = useFonts({\r\n    Mynerve_400Regular,\r\n  });\r\n  if (!fontsLoaded) {\r\n    return null;\r\n  }\r\n  const onCartPressed =() => {\r\n    navigation.navigate(\"Checkout\")\r\n  }\r\n\r\n  return (\r\n\r\n    <SafeAreaView style={styles.container}>\r\n      <ScrollView style={styles.scrollView}>\r\n        <View style = {styles.body}>\r\n          <CustomButton text=\"Go to Checkout\" onPress={onCartPressed} />\r\n            <Text style = {styles.food}> ENTREE</Text>\r\n            <Image\r\n            style = {styles.image}\r\n            source={require('../../assets/images/chicken_burger.jpg')}\r\n            />\r\n            <Text style = {styles.description}> Chicken Sandwich</Text>\r\n            <Text style = {styles.price}> Price: $2.75</Text>\r\n            <Text style = {styles.price}> Item #: 100 </Text> \r\n        </View>\r\n      </ScrollView>\r\n    </SafeAreaView>\r\n\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  header: {\r\n      fontSize:50,\r\n      fontWeight: \"bold\",\r\n      textAlign: \"center\",\r\n      textDecorationLine: \"underline\",\r\n  },     \r\n  image: {\r\n      height: \"50%\",\r\n      width: \"100%\",\r\n      resizeMode: \"cover\",\r\n      borderBottomLeftRadius: 10,\r\n      borderBottomRightRadius: 10,\r\n      borderTopRightRadius: 10,\r\n      borderTopLeftRadius: 10,\r\n  },\r\n\r\n  body: {\r\n\r\n      borderColor: \"gold\",\r\n      backgroundColor: \"gold\",\r\n  },\r\n  food: {\r\n  color: \"red\",\r\n  fontWeight: \"500\",\r\n  fontFamily: \"Mynerve_400Regular\",\r\n  fontSize: 30,\r\n  textAlign: \"center\",\r\n  padding: 20,\r\n  \r\n  },\r\n  description: {\r\n      color: \"black\",\r\n      fontStyle: \"italic\",\r\n      fontWeight: \"500\",\r\n      fontFamily: \"Mynerve_400Regular\",\r\n      fontSize: 25,\r\n      textAlign: \"center\",\r\n      padding: 20,\r\n      },\r\n      price: {\r\n        color: \"black\",\r\n        fontStyle: \"italic\",\r\n        fontWeight: \"500\",\r\n        fontFamily: \"Mynerve_400Regular\",\r\n        fontSize: 20,\r\n        textAlign: \"center\",\r\n        padding: 10,\r\n        }\r\n});"],"mappings":";AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEtC,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,0BAA0B,QAAQ,gCAAgC;AAC3E,SAASC,QAAQ,EAAEC,kBAAkB,QAAQ,4BAA4B;AACzE,OAAOC,WAAW;AAClB,OAAOC,YAAY;AACnB,OAAOC,MAAM,MAAM,qBAAqB;AAAC;AAAA;AAEzC,eAAe,SAASC,UAAU,OAAiB;EAAA,IAAdC,UAAU,QAAVA,UAAU;EAG7C,gBAAoBN,QAAQ,CAAC;MAC3BC,kBAAkB,EAAlBA;IACF,CAAC,CAAC;IAAA;IAFGM,WAAW;EAGhB,IAAI,CAACA,WAAW,EAAE;IAChB,OAAO,IAAI;EACb;EACA,IAAMC,aAAa,GAAE,SAAfA,aAAa,GAAQ;IACzBF,UAAU,CAACG,QAAQ,CAAC,UAAU,CAAC;EACjC,CAAC;EAED,OAEE,KAAC,YAAY;IAAC,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAA,UACpC,KAAC,UAAU;MAAC,KAAK,EAAED,MAAM,CAACE,UAAW;MAAA,UACnC,MAAC,IAAI;QAAC,KAAK,EAAIF,MAAM,CAACG,IAAK;QAAA,WACzB,KAAC,YAAY;UAAC,IAAI,EAAC,gBAAgB;UAAC,OAAO,EAAEL;QAAc,EAAG,EAC5D,KAAC,IAAI;UAAC,KAAK,EAAIE,MAAM,CAACI,IAAK;UAAA,UAAC;QAAO,EAAO,EAC1C,KAAC,KAAK;UACN,KAAK,EAAIJ,MAAM,CAACK,KAAM;UACtB,MAAM,EAAEC,OAAO;QAA2C,EACxD,EACF,KAAC,IAAI;UAAC,KAAK,EAAIN,MAAM,CAACO,WAAY;UAAA,UAAC;QAAiB,EAAO,EAC3D,KAAC,IAAI;UAAC,KAAK,EAAIP,MAAM,CAACQ,KAAM;UAAA,UAAC;QAAa,EAAO,EACjD,KAAC,IAAI;UAAC,KAAK,EAAIR,MAAM,CAACQ,KAAM;UAAA,UAAC;QAAa,EAAO;MAAA;IAC9C;EACI,EACA;AAGnB;AAAC;AAED,IAAMR,MAAM,GAAGS,UAAU,CAACC,MAAM,CAAC;EAC/BC,MAAM,EAAE;IACJC,QAAQ,EAAC,EAAE;IACXC,UAAU,EAAE,MAAM;IAClBC,SAAS,EAAE,QAAQ;IACnBC,kBAAkB,EAAE;EACxB,CAAC;EACDV,KAAK,EAAE;IACHW,MAAM,EAAE,KAAK;IACbC,KAAK,EAAE,MAAM;IACbC,UAAU,EAAE,OAAO;IACnBC,sBAAsB,EAAE,EAAE;IAC1BC,uBAAuB,EAAE,EAAE;IAC3BC,oBAAoB,EAAE,EAAE;IACxBC,mBAAmB,EAAE;EACzB,CAAC;EAEDnB,IAAI,EAAE;IAEFoB,WAAW,EAAE,MAAM;IACnBC,eAAe,EAAE;EACrB,CAAC;EACDpB,IAAI,EAAE;IACNqB,KAAK,EAAE,KAAK;IACZZ,UAAU,EAAE,KAAK;IACjBa,UAAU,EAAE,oBAAoB;IAChCd,QAAQ,EAAE,EAAE;IACZE,SAAS,EAAE,QAAQ;IACnBa,OAAO,EAAE;EAET,CAAC;EACDpB,WAAW,EAAE;IACTkB,KAAK,EAAE,OAAO;IACdG,SAAS,EAAE,QAAQ;IACnBf,UAAU,EAAE,KAAK;IACjBa,UAAU,EAAE,oBAAoB;IAChCd,QAAQ,EAAE,EAAE;IACZE,SAAS,EAAE,QAAQ;IACnBa,OAAO,EAAE;EACT,CAAC;EACDnB,KAAK,EAAE;IACLiB,KAAK,EAAE,OAAO;IACdG,SAAS,EAAE,QAAQ;IACnBf,UAAU,EAAE,KAAK;IACjBa,UAAU,EAAE,oBAAoB;IAChCd,QAAQ,EAAE,EAAE;IACZE,SAAS,EAAE,QAAQ;IACnBa,OAAO,EAAE;EACT;AACR,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}